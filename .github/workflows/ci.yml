name: biomodels mapper ci


on:
    workflow_dispatch:
    
    pull_request:
        types:
            - opened
            - synchronize
    
    push:
        branches:
            - master


permissions:
    id-token: write
    contents: read


jobs:
    lint:
        if: ${{ github.event_name == 'pull_request' || github.event_name == 'workflow_dispatch' }}
        runs-on: ubuntu-latest
        env:
            REPO_DIR : /opt/biomodels-mapper
        steps:
            - uses: actions/checkout@v4

            - name: Run lint
              run: |
                docker build --build-arg REPO_DIR="$REPO_DIR" --target setup-env -t lint-image .
                docker run --name lint-container lint-image
            
            - name: Display lint errors
              if: failure()
              run: |
                docker cp lint-container:"$REPO_DIR"/lint.log .
                while IFS= read -r LINT_MSG; do echo "::warning::${LINT_MSG}"; done < lint.log
                exit 1

    docker-build:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4

            - uses: docker/setup-buildx-action@v3
            
            - uses: docker/build-push-action@v5
              with:
                context: .
                file: Dockerfile
                tags: tmp-tag
                outputs: type=docker,dest=/tmp/image.tar

            - uses: actions/upload-artifact@v4
              with:
                name: image-artifact
                path: /tmp/image.tar

    # docker-push:
    #     if: ${{ github.event_name == 'push' && github.ref == 'refs/heads/master' }}
    #     needs: docker-build
    #     runs-on: ubuntu-latest
    #     steps:
    #         - env:
    #             AWS_REGION : us-east-1
    #           uses: aws-actions/configure-aws-credentials@v4
    #           with:
    #             role-to-assume: ${{ vars.AWS_ROLE }}
    #             aws-region: ${{ env.AWS_REGION }}
    
    #         - id: login-ecr
    #           uses: aws-actions/amazon-ecr-login@v2
            
    #         - uses: actions/download-artifact@v4
    #           with:
    #             name: image-artifact
    #             path: /tmp

    #         - env:
    #             AWS_REGISTRY : ${{ steps.login-ecr.outputs.registry }}
    #             AWS_REPO : biomodels-mapper
    #             IMG_TAG : latest 
    #           run: |
    #             docker load --input /tmp/image.tar
    #             docker image tag tmp-tag $AWS_REGISTRY/$AWS_REPO:$IMG_TAG
    #             docker push $AWS_REGISTRY/$AWS_REPO:$IMG_TAG
